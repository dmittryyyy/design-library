@use '../variables/colors' as *;
@use '../variables/typography' as *;

/// Base mixin for applying `font-size` and `line-height` values according to the design system.
/// @param {Length} $size - Variable or static font-size value.
@mixin typo-make-sizes($size, $lineHeight: 8px) {
  font-size: $size;

  @if ($lineHeight == 1) {
    line-height: 1em;
  } @else {
    line-height: calc(1em + $lineHeight);
  }

  //@if ($isHeading) {
  //  line-height: $typo-line-height-heading;
  //} @else {
  //  line-height: $typo-line-height-text;
  //}
}

/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the big h1 heading.
@mixin typo-make-h1() {
  @include typo-make-sizes($typo-h1-size, 4px);
}
/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the h2 heading.
@mixin typo-make-h2() {
  @include typo-make-sizes($typo-h2-size, 4px);
}
/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the h3 heading.
@mixin typo-make-h3() {
  @include typo-make-sizes($typo-h3-size, 4px);
}
/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the h4 heading.
@mixin typo-make-h4() {
  @include typo-make-sizes($typo-h4-size, 4px);
}

/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the lead text.
@mixin typo-make-lead {
  @include typo-make-sizes($typo-lead-size);
}

/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the base text.
@mixin typo-make-text {
  @include typo-make-sizes($typo-text-size);
}

/// A mixin for applying `font-size` and `line-height` values according to the design system for
/// the small text.
@mixin typo-make-small {
  @include typo-make-sizes($typo-small-size, 4px);
}

/// A mixin for creating a text link with animated underline on hover.
@mixin typo-text-link {
  border-bottom: 1px solid transparent;
  background-image: linear-gradient(to right, currentColor 50%, transparent 50%);
  background-position: 100% calc(100% + 1px);
  background-size: calc(200% + 1px) 1px;
  background-repeat: repeat-x;
  transition: background-position .6s;

  &.blur {
    background-position-x: -100%;
  }

  &:hover {
    background-position-x: 0;
  }

  &.no-transition {
    transition-duration: 0s;
  }
}
